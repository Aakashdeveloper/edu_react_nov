https://nodejs.org/en/
https://code.visualstudio.com/download
Create Account >>> https://github.com/
https://git-scm.com/downloads

TabNine
GitLens
GitHistory
eslint
vscode-icons

React

React is frontend lib/framework which help to build
single page application using component
base structure.

JSON
> JavaScript Object Notation
[
    {
        "id":1
        "name":"John"
        "city":"Amsterdam"
    },
    {
        "id":2
        "name":"Ankit"
        "city":"Venice"
    }
]

####
package.json
#####
> entry point to application
> meta data
    > name
    > version
    > description
> script( start, build , test)
> packages

////////////
Step to generate package.json
///////////
**NodeJs must be install in your laptop
> go inside folder where you want to generate package.json
> npm init
> answer all question
> type "yes"

////////////
Step to install package
///////////
**NodeJs must be install in your laptop
> go inside folder where you want to generate package.json
> npm i packagename

>>>>>><<<<<<<<<



////////
set to generate react app
////////////
Window(with Admin access)

// One Time Step //
> open a cmd as administrator
> npm i -g create-react-app
> close cmd

// Next Every Time You Need New App //
> open cmd
> navigate to folder where you want app
> create-react-app appname

Mac/Linux(with Admin access)
// One Time Step //
> open terminal
> sudo npm i -g create-react-app
> close cmd

// Next Every Time You Need New App //
> open terminal
> navigate to folder where you want app
> create-react-app appname


////office laptop
//Every Time You Need New App //
> open terminal/cmd
> navigate to folder where you want app
> npx create-react-app appname

react        >>> this is the main library 
react-dom    >>> this help to display content on the screen
react-script >>> this help to run the application

es5> Ecma Script5
es6> Ecma Script6

function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)

////////component/////
functional
> dumb component
> use for display purpose
> cannot maintain state

class
> logical component
> use for display purpose, api calling, logics
> can maintain state

state
> Act like a local variable
> Every Component can have its own state
> Scope of the state is in own component scope
> Value of state can be updated (mutable)
> Any data interaction will happen through state only

Props
> Help to transfer data from one component to another component
> Value of props cannot be modified (immutable)
> data can be transfer between nested components


//////map//////
var city = ["Delhi","Mumbai","London","Amsterdam"]

//es5
for(i=0;i<city.length;i++){
    console.log(city[i])
}

//es6
city.map((item) => { console.log(item)})

function add(a,b){

}

///////
parent to child > props
child to parent > props with function

in parent we will define the function
in child we will call the function

function add(a,b){
    return a+b
}

add(1,2)
////////////////

filter
> filter help to filter out the data from array

var a = [3,5,6,2,8,9,1,4,8]
a.filter((data) => { return data>5})
[6, 8, 9, 8]

var city = ["Delhi","Mumbai","London","Amsterdam"];
city.indexOf('Delhi')
0
city.indexOf('London')
2
city.indexOf('Venice')
-1
city.indexOf('Helsinki')
-1

//////
npm
/////
react-router-dom

var a = 10
a >10 ? "hii":"bie"

params
> what we pass after "/"
> we need to define as it is compulsory

queryParams
> what we pass after "?"
> It is optional

//////////////
default props

> history > to redirect
> location > for getting queryParams
> match > for getting params


var a = "I am learning javascript"
a.split(' ')
(4) ['I', 'am', 'learning', 'javascript']
a.split(' ')[3]
'javascript'

var url = "http://localhost:3003/post/JavaScript
a.split('/')
['I am learning javascript']
url.split('/')
(5) ['http:', '', 'localhost:3003', 'post', 'JavaScript']
url.split('/')[4]
'JavaScript'

var a = "test=1"
undefined
a.split('=')
(2) ['test', '1']
a.split('=')[1]
'1'
var a = "test=98"
undefined
a.split('=')[1]
'98'


(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook


///////////
JSON-Server

npx json-server --watch booking.json --port 3400
